{"version":3,"sources":["webpack:///./src/views/Colaboradores/Cadastro.vue","webpack:///./src/views/Colaboradores/Cadastro.vue?af25","webpack:///./node_modules/quasar/src/components/card/QCardActions.js","webpack:///./node_modules/quasar/src/components/btn-toggle/QBtnToggle.js","webpack:///./node_modules/quasar/src/components/inner-loading/QInnerLoading.js","webpack:///./node_modules/quasar/src/composables/use-quasar.js"],"names":["class","_createBlock","_component_q_layout","view","_createVNode","_component_Header","cmail","_ctx","labelDashboard","_component_q_page_container","_component_q_page","_component_q_banner","inline-actions","style","action","_component_q_btn","flat","color","label","_createElementVNode","_component_q_card","bordered","id","onSubmit","$options","_component_q_card_section","_toDisplayString","$setup","_component_q_input","outlined","$data","$event","rules","val","_component_q_separator","mask","fill-mask","type","_component_q_btn_toggle","spread","no-caps","unelevated","toggle-color","text-color","options","_component_q_card_actions","vertical","align","loading","size","icon","_component_q_inner_loading","showing","label-class","label-style","setup","origin","process","url","name","search","components","Header","$q","useQuasar","submitting","ref","pageTitle","pageSubTitle","showNotif","msg","notify","message","data","email","crmv","avatar","phone","expertise","role","status","methods","this","dataJson","JSON","stringify","req","fetch","method","mode","headers","body","res","json","console","log","$router","go","mounted","__exports__","render","QLayout","QPageContainer","QPage","QBanner","QBtn","QCard","QCardSection","QInput","QSeparator","QBtnToggle","QCardActions","QInnerLoading","createComponent","props","useAlignProps","Boolean","slots","alignClass","useAlign","classes","computed","value","h","hSlot","default","useFormProps","modelValue","required","Array","validator","v","every","opt","String","textColor","toggleColor","toggleTextColor","outline","rounded","push","glossy","padding","noCaps","noWrap","dense","readonly","disable","stack","stretch","clearable","ripple","Object","emits","emit","hasActiveValue","find","formAttrs","injectFormInput","useFormInject","btnOptions","map","item","i","attrs","slot","key","onClick","e","set","mergeOpt","getContent","child","hMergeSlot","QBtnGroup","useDarkProps","useTransitionProps","Number","labelClass","labelStyle","vm","getCurrentInstance","isDark","useDark","proxy","transition","transitionStyle","useTransition","getInner","QSpinner","Transition","appear","inject","quasarKey"],"mappings":"qKAUS,0E,GAOIA,MAAM,sB,GACJA,MAAM,0C,GACJA,MAAM,W,GAMEA,MAAM,wB,GAKNA,MAAM,2C,GAYNA,MAAM,yC,GAUNA,MAAM,yC,GAeNA,MAAM,yC,GAmBNA,MAAM,yC,GAiBNA,MAAM,yC,ucAtG7BC,eA6JWC,EAAA,CA7JDF,MAAM,YAAYG,KAAK,eAAjC,C,uBACE,IAA0D,CAA1DC,eAA0DC,EAAA,CAAjDC,MAAOC,QAAQC,eAAgBD,kBAAxC,mCAEAH,eAyJmBK,EAAA,M,uBAxJjB,IAuJS,CAvJTL,eAuJSM,EAAA,M,uBAtJP,IASW,CATXN,eASWO,EAAA,CARTC,iBAAA,GACAZ,MAAM,oBACNa,MAAA,kBAHF,CAMmBC,OAAM,eACrB,IAAiD,CAAjDV,eAAiDW,EAAA,CAA1CC,KAAA,GAAKC,MAAM,QAAQC,MAAM,mB,uBAHnC,IAEC,K,MAKFC,eA0IM,MA1IN,EA0IM,CAzIJA,eAqIM,MArIN,EAqIM,CApIJA,eAmIM,MAnIN,EAmIM,CAhIJf,eA6HSgB,EAAA,CA7HDJ,KAAA,GAAKK,SAAA,GAASrB,MAAM,YAA5B,C,uBACE,IA2HO,CA3HPmB,eA2HO,QA3HDG,GAAG,cAAeC,SAAM,mCAAUC,iDAAkB,eAA1D,CACEpB,eAEiBqB,EAAA,CAFDzB,MAAM,aAAW,C,uBAC/B,IAAuD,CAAvDmB,eAAuD,MAAvD,EAAuDO,eAAlBC,aAAS,K,MAIhDvB,eASiBqB,EAAA,CATDzB,MAAM,uCAAqC,C,uBACzD,IAOM,CAPNmB,eAOM,MAPN,EAOM,CANJf,eAKEwB,EAAA,CAJAC,SAAA,G,WACSC,O,qCAAAA,OAAIC,GACbb,MAAM,QACLc,MAAK,CAAIC,KAAUA,GAAG,8BAJzB,mC,MASJ7B,eAAe8B,GACf9B,eAoBiBqB,EAAA,CApBDzB,MAAM,uCAAqC,C,uBACzD,IASM,CATNmB,eASM,MATN,EASM,CARJf,eAOEwB,EAAA,CANAC,SAAA,G,WACSC,Q,qCAAAA,QAAKC,GACdb,MAAM,YACNiB,KAAK,mBACLC,YAAU,IACTJ,MAAK,CAAIC,KAAUA,GAAG,8BANzB,iCASFd,eAQM,MARN,EAQM,CAPJf,eAMEwB,EAAA,CALAC,SAAA,G,WACSC,Q,qCAAAA,QAAKC,GACdM,KAAK,QACLnB,MAAM,UACLc,MAAK,CAAIC,KAAUA,GAAG,8BALzB,mC,MAUJ7B,eAAe8B,GACf9B,eAiCiBqB,EAAA,CAhCfzB,MAAM,uDAAqD,C,uBAE3D,IAkBM,CAlBNmB,eAkBM,MAlBN,EAkBM,CAjBJf,eAgBEkC,EAAA,C,WAfSR,O,qCAAAA,OAAIC,GACbQ,OAAA,GACAvC,MAAM,mBACNwC,UAAA,GACAC,WAAA,GACAC,eAAa,UACbzB,MAAM,SACN0B,aAAW,UACVC,QAAS,CAAC,C,iCAAD,C,oCAAA,C,mCAAA,C,uCATZ,yBAkBFzB,eAUM,MAVN,EAUM,CARQ,OAAJW,QAAI,iBADZ7B,eAQE2B,EAAA,C,MANAC,SAAA,G,WACSC,O,qCAAAA,OAAIC,GACbb,MAAM,QACNiB,KAAK,iBACLC,YAAU,IACTJ,MAAK,CAAIC,KAAUA,GAAG,8BAPzB,0D,MAYJ7B,eAAe8B,GACf9B,eAyBiBqB,EAAA,CAxBfzB,MAAM,uDAAqD,C,uBAE3D,IAoBM,CApBNmB,eAoBM,MApBN,EAoBM,CAnBJf,eAkBEkC,EAAA,C,WAjBSR,O,qCAAAA,OAAIC,GACbQ,OAAA,GACAvC,MAAM,mBACNwC,UAAA,GACAC,WAAA,GACAC,eAAa,UACbzB,MAAM,SACN0B,aAAW,UACVC,QAAS,CAAC,C,sCAAD,C,sCAAA,C,oCAAA,C,0CATZ,qC,MAsBJxC,eAAe8B,GACf9B,eAkBiByC,EAAA,CAlBDC,SAAA,GAASC,MAAM,UAA/B,C,uBACE,IAgBQ,CAhBR3C,eAgBQW,EAAA,CAfNsB,KAAK,SACJW,QAASrB,aACVsB,KAAK,OACLC,KAAK,0BACLhC,MAAM,wBACND,MAAM,kCANR,CAQmB+B,QAAO,eACtB,IAKE,CALF5C,eAKE+C,EAAA,CAJCC,QAAS7C,UACVW,MAAM,iBACNmC,cAAY,YACZC,cAAY,oBAJd,sB,KATJ,iB,OAzGJ,M,gEAkJhB,MAAMC,EAAQ,CACZC,OAAQC,mBACRC,IAAKD,oDAKQ,OACbE,KAAM,OACNC,OAAQ,YACRC,WAAY,CACVC,eAEFP,QACE,MAAMQ,EAAKC,iBACLC,EAAaC,gBAAI,GAEvB,MAAO,CACLX,MAAOA,EACPU,aACAE,UAAW,4BACXC,aAAc,oBACdC,UAAUC,EAAKrD,EAAOiC,GACpBa,EAAGQ,OAAO,CACRC,QAASF,EACTrD,MAAOA,EACPiC,KAAMA,OAKduB,OACE,MAAO,CAELd,KAAM,KACNe,MAAO,KACPC,KAAM,KACNC,OAAQ,KACRC,MAAO,KACPC,UAAW,KACXC,KAAM,KACN1C,KAAM,KACN2C,OAAQ,WAIZC,QAAS,CACP,2BACEC,KAAKjB,YAAa,EAElB,MAAMQ,EAAO,CACXd,KAAMuB,KAAKvB,KACXe,MAAOQ,KAAKR,MACZC,KAAMO,KAAKP,KACXC,OAAQM,KAAKN,OACbC,MAAOK,KAAKL,MACZC,UAAWI,KAAKJ,UAChBC,KAAMG,KAAKH,KACX1C,KAAM6C,KAAK7C,KACX2C,OAAQ,UAGJG,EAAWC,KAAKC,UAAUZ,GAEhC,GAAIA,EAAKd,MAAQc,EAAKC,OAASD,EAAKI,MAAO,CACzC,MAAMS,QAAYC,MAAML,KAAK3B,MAAMG,IAAK,CACtC8B,OAAQ,OACRC,KAAM,OACNC,QAAS,CACP,OAAUR,KAAK3B,MAAMC,OACrB,OAAU,iDACV,eAAgB,oDAElBmC,KAAMR,IAGFS,QAAYN,EAAIO,OACtBC,QAAQC,IAAIH,EAAInB,KAAKH,KAGjBsB,GACFV,KAAKvB,KAAO,KACZuB,KAAKR,MAAQ,KACbQ,KAAKP,KAAO,KACZO,KAAKN,OAAS,KACdM,KAAKL,MAAQ,KACbK,KAAKJ,UAAY,KACjBI,KAAKH,KAAO,KACZG,KAAK7C,KAAO,KAEZ6C,KAAKb,UACHuB,EAAInB,KAAKH,IACT,QACA,oBAEFY,KAAKc,QAAQC,IAAI,IAEjBf,KAAKb,UACH,oDACA,MACA,oBAIJa,KAAKb,UACH,+CACA,MACA,+BAGJa,KAAKjB,YAAa,IAItBiC,a,0LCtRF,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASC,KAErD,eAcf,IAAS,EAAQ,aAAc,CAACC,UAAA,KAAQC,iBAAA,KAAeC,QAAA,KAAMC,UAAA,KAAQC,OAAA,KAAKC,QAAA,KAAMC,eAAA,KAAaC,SAAA,KAAOC,aAAA,KAAWC,aAAA,KAAWC,eAAA,KAAaC,gBAAA,Q,oCCrBvI,oDAOeC,sBAAgB,CAC7BtD,KAAM,eAENuD,MAAO,IACFC,OACHrE,SAAUsE,SAGZ7D,MAAO2D,GAAO,MAAEG,IACd,MAAMC,EAAaC,eAASL,GAEtBM,EAAUC,eAAS,IACtB,mBAAmBH,EAAWI,MAC5B,uBAAwC,IAAnBR,EAAMpE,SAAoB,cAAgB,cAGpE,MAAO,IAAM6E,eAAE,MAAO,CAAE3H,MAAOwH,EAAQE,OAASE,eAAMP,EAAMQ,c,oCCvBhE,4EAUeZ,sBAAgB,CAC7BtD,KAAM,aAENuD,MAAO,IACFY,OAEHC,WAAY,CACVC,UAAU,GAGZpF,QAAS,CACPP,KAAM4F,MACND,UAAU,EACVE,UAAWC,GAAKA,EAAEC,MAChBC,IAAQ,UAAWA,GAAO,SAAUA,GAAO,SAAUA,IAAQ,UAAWA,IAM5EpH,MAAOqH,OACPC,UAAWD,OACXE,YAAa,CACXnG,KAAMiG,OACNT,QAAS,WAEXY,gBAAiBH,OAEjBI,QAAStB,QACTpG,KAAMoG,QACN3E,WAAY2E,QACZuB,QAASvB,QACTwB,KAAMxB,QACNyB,OAAQzB,QAERnE,KAAMqF,OACNQ,QAASR,OAETS,OAAQ3B,QACR4B,OAAQ5B,QACR6B,MAAO7B,QACP8B,SAAU9B,QACV+B,QAAS/B,QAETgC,MAAOhC,QACPiC,QAASjC,QAET7E,OAAQ6E,QAERkC,UAAWlC,QAEXmC,OAAQ,CACNlH,KAAM,CAAE+E,QAASoC,QACjB3B,SAAS,IAIb4B,MAAO,CAAE,oBAAqB,QAAS,SAEvClG,MAAO2D,GAAO,MAAEG,EAAF,KAASqC,IACrB,MAAMC,EAAiBlC,eAAS,SACgC,IAA9DP,EAAMtE,QAAQgH,KAAKvB,GAAOA,EAAIX,QAAUR,EAAMa,aAG1C8B,EAAYpC,eAAS,KAAM,CAC/BpF,KAAM,SACNsB,KAAMuD,EAAMvD,KACZ+D,MAAOR,EAAMa,cAGT+B,EAAkBC,eAAcF,GAEhCG,EAAavC,eAAS,IAAMP,EAAMtE,QAAQqH,IAAI,CAACC,EAAMC,KACzD,MAAM,MAAEC,EAAF,MAAS1C,EAAT,KAAgB2C,KAAShC,GAAQ6B,EAEvC,MAAO,CACLG,OACAnD,MAAO,CACLoD,IAAKH,EACLI,QAASC,GAAKC,EAAI/C,EAAOwC,EAAMM,IAE/B,eAAgB9C,IAAUR,EAAMa,WAAa,OAAS,WAEnDqC,KACA/B,EAEHK,QAASxB,EAAMwB,QACf1H,KAAMkG,EAAMlG,KACZ2H,QAASzB,EAAMyB,QACfC,KAAM1B,EAAM0B,KACZnG,WAAYyE,EAAMzE,WAClBwG,MAAO/B,EAAM+B,MAEbE,SAA2B,IAAlBjC,EAAMiC,UAAoC,IAAhBd,EAAIc,QAGvClI,MAAOyG,IAAUR,EAAMa,WACnB2C,EAASrC,EAAK,eACdqC,EAASrC,EAAK,SAClBE,UAAWb,IAAUR,EAAMa,WACvB2C,EAASrC,EAAK,mBACdqC,EAASrC,EAAK,aAClBU,QAAoC,IAA5B2B,EAASrC,EAAK,UACtBW,QAAoC,IAA5B0B,EAASrC,EAAK,UAEtBpF,KAAMyH,EAASrC,EAAK,QACpBS,QAAS4B,EAASrC,EAAK,WACvBkB,OAAQmB,EAASrC,EAAK,UACtBe,OAAkC,IAA3BsB,EAASrC,EAAK,SACrBgB,SAAsC,IAA7BqB,EAASrC,EAAK,gBAK7B,SAASoC,EAAK/C,EAAOW,EAAKmC,IACD,IAAnBtD,EAAMgC,WACJhC,EAAMa,aAAeL,GACC,IAApBR,EAAMoC,YACRI,EAAK,oBAAqB,KAAM,MAChCA,EAAK,UAIPA,EAAK,oBAAqBhC,EAAOW,GAGnCqB,EAAK,QAASc,IAIlB,SAASE,EAAUrC,EAAKiC,GACtB,YAAsB,IAAfjC,EAAKiC,GAAmBpD,EAAOoD,GAAQjC,EAAKiC,GAGrD,SAASK,IACP,MAAMC,EAAQZ,EAAWtC,MAAMuC,IAAI5B,GAC1BV,eAAElB,OAAM4B,EAAInB,WAAoB,IAAbmB,EAAIgC,KAAkBhD,EAAOgB,EAAIgC,WAAS,IAOtE,YAJmB,IAAfnD,EAAMvD,OAAqC,IAAlBuD,EAAMiC,UAA6C,IAAzBQ,EAAejC,OACpEoC,EAAgBc,EAAO,QAGlBC,eAAWxD,EAAMQ,QAAS+C,GAGnC,MAAO,IAAMjD,eAAEmD,OAAW,CACxB9K,MAAO,eACP0I,QAASxB,EAAMwB,QACf1H,KAAMkG,EAAMlG,KACZ2H,QAASzB,EAAMyB,QACfC,KAAM1B,EAAM0B,KACZS,QAASnC,EAAMmC,QACf5G,WAAYyE,EAAMzE,WAClBoG,OAAQ3B,EAAM2B,OACdtG,OAAQ2E,EAAM3E,QACboI,O,oCCtKP,gEAQe1D,sBAAgB,CAC7BtD,KAAM,gBAENuD,MAAO,IACF6D,UACAC,OAEH5H,QAASgE,QACTnG,MAAOqH,OAEPrF,KAAM,CACJZ,KAAM,CAAEiG,OAAQ2C,QAChBpD,QAAS,IAGX3G,MAAOoH,OACP4C,WAAY5C,OACZ6C,WAAY,CAAE7C,OAAQL,MAAOuB,SAG/BjG,MAAO2D,GAAO,MAAEG,IACd,MAAM+D,EAAKC,iBACLC,EAASC,eAAQrE,EAAOkE,EAAGI,MAAMzH,KAEjC,WAAE0H,EAAF,gBAAcC,GAAoBC,eAAczE,EAAOO,eAAS,IAAMP,EAAM9D,UAE5EoE,EAAUC,eAAS,IACvB,qDACoB,IAAjB6D,EAAO5D,MAAiB,yBAA2B,KAGlDwD,EAAazD,eAAS,IAC1B,+BACwB,IAArBP,EAAMgE,WAAyB,IAAIhE,EAAMgE,WAAgB,KAG9D,SAASU,IACP,MAAMhB,EAAQ,CACZjD,eAAEkE,OAAU,CACV5I,KAAMiE,EAAMjE,KACZhC,MAAOiG,EAAMjG,SAajB,YAToB,IAAhBiG,EAAMhG,OACR0J,EAAMhC,KACJjB,eAAE,MAAO,CACP3H,MAAOkL,EAAWxD,MAClB7G,MAAOqG,EAAMiE,YACZ,CAAEjE,EAAMhG,SAIR0J,EAGT,SAASD,IACP,OAAyB,IAAlBzD,EAAM9D,QACTuE,eACA,MACA,CAAE3H,MAAOwH,EAAQE,MAAO7G,MAAO6K,EAAgBhE,YAC7B,IAAlBL,EAAMQ,QACFR,EAAMQ,UACN+D,KAEJ,KAGN,MAAO,IAAMjE,eAAEmE,OAAY,CACzBnI,KAAM8H,EAAW/D,MACjBqE,QAAQ,GACPpB,O,kCC/EP,8DAOe,SAAS3G,IACtB,OAAOgI,eAAOC","file":"js/CadastroColaboradores.1b69bb1b.js","sourcesContent":["<template>\n  <q-layout class=\"bg-grey-4\" view=\"lHh Lpr lFf\">\n    <Header :cmail=\"cmail\" :labelDashboard=\"labelDashboard\" />\n\n    <q-page-container>\n      <q-page>\n        <q-banner\n          inline-actions\n          class=\"text-white bg-red\"\n          style=\"display: none\"\n        >\n          Você perdeu a conexão com a internet. Este aplicativo está off-line.\n          <template v-slot:action>\n            <q-btn flat color=\"white\" label=\"Ativar Wi-Fi\" />\n          </template>\n        </q-banner>\n\n        <div class=\"row justify-center\">\n          <div class=\"col-xs-12 col-sm-12 col-md-10 col-lg-8\">\n            <div class=\"q-pa-md\">\n              <!--Start - conteudo-->\n\n              <q-card flat bordered class=\"bg-white\">\n                <form id=\"client-form\" @submit.prevent=\"createCollaborator\">\n                  <q-card-section class=\"bg-grey-1\">\n                    <div class=\"text-h6 text-primary\">{{ pageTitle }}</div>\n                  </q-card-section>\n\n\n                  <q-card-section class=\"row q-col-gutter-sm q-col-gutter-md\">\n                    <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                      <q-input\n                        outlined\n                        v-model=\"name\"\n                        label=\"Nome*\"\n                        :rules=\"[(val) => !!val || 'Esse campo é obrigatório!']\"\n                      />\n                    </div>\n                  </q-card-section>\n\n                  <q-separator />\n                  <q-card-section class=\"row q-col-gutter-sm q-col-gutter-md\">\n                    <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\n                      <q-input\n                        outlined\n                        v-model=\"phone\"\n                        label=\"Telefone*\"\n                        mask=\"(##) # ####-####\"\n                        fill-mask=\"_\"\n                        :rules=\"[(val) => !!val || 'Esse campo é obrigatório!']\"\n                      />\n                    </div>\n                    <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\n                      <q-input\n                        outlined\n                        v-model=\"email\"\n                        type=\"email\"\n                        label=\"E-mail*\"\n                        :rules=\"[(val) => !!val || 'Esse campo é obrigatório!']\"\n                      />\n                    </div>\n                  </q-card-section>\n\n                  <q-separator />\n                  <q-card-section\n                    class=\"row q-col-gutter-sm q-col-gutter-md q-pt-lg q-pb-lg\"\n                  >\n                    <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\n                      <q-btn-toggle\n                        v-model=\"role\"\n                        spread\n                        class=\"my-custom-toggle\"\n                        no-caps\n                        unelevated\n                        toggle-color=\"primary\"\n                        color=\"grey-2\"\n                        text-color=\"primary\"\n                        :options=\"[\n                          { label: 'Veterinário', value: 'vet' },\n                          { label: 'Auxiliar', value: 'assistant' },\n                          { label: 'Técnico', value: 'technical' },\n                          { label: 'Especialista', value: 'expert' }\n            \n                        ]\"\n                      />\n                    </div>\n                    <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\n                      <q-input\n                        v-if=\"role == 'vet'\"\n                        outlined\n                        v-model=\"crmv\"\n                        label=\"CRMV*\"\n                        mask=\"###.###.###-##\"\n                        fill-mask=\"_\"\n                        :rules=\"[(val) => !!val || 'Esse campo é obrigatório!']\"\n                      />\n                    </div>\n                  </q-card-section>\n\n                  <q-separator />\n                  <q-card-section\n                    class=\"row q-col-gutter-sm q-col-gutter-md q-pt-lg q-pb-lg\"\n                  >\n                    <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\n                      <q-btn-toggle\n                        v-model=\"type\"\n                        spread\n                        class=\"my-custom-toggle\"\n                        no-caps\n                        unelevated\n                        toggle-color=\"primary\"\n                        color=\"grey-2\"\n                        text-color=\"primary\"\n                        :options=\"[\n           \n                          { label: 'Convidado(a)', value: 'invited' },\n                          { label: 'Assistente', value: 'assistant' },\n                          { label: 'Veterinario(a)', value: 'vet' },\n                          { label: 'Administrador(a)', value: 'admin' }\n\n\n                        ]\"\n                      />\n                    </div>\n                    \n                  </q-card-section>\n                  <q-separator />\n                  <q-card-actions vertical align=\"around\">\n                    <q-btn\n                      type=\"submit\"\n                      :loading=\"submitting\"\n                      size=\"17px\"\n                      icon=\"las la-cloud-upload-alt\"\n                      label=\"Cadastrar Colaborador\"\n                      color=\"primary text-uppercase q-ma-lg\"\n                    >\n                      <template v-slot:loading>\n                        <q-inner-loading\n                          :showing=\"visible\"\n                          label=\"Please wait...\"\n                          label-class=\"text-teal\"\n                          label-style=\"font-size: 1.1em\"\n                        />\n                      </template>\n                    </q-btn>\n                  </q-card-actions>\n                </form>\n              </q-card>\n\n              <!--End - conteudo-->\n            </div>\n          </div>\n          <!--\n          <div class=\"col-xs-12 col-sm-6 col-md-4 col-lg-4 q-pa-md\">right 2 column</div>\n          conteudo-->\n        </div>\n      </q-page>\n    </q-page-container>\n  </q-layout>\n</template>\n\n<style>\n</style>\n\n<script>\nimport { useQuasar } from \"quasar\";\nimport { ref } from \"vue\";\nimport Header from \"../../components/Header.vue\";\n\nconst setup = {\n  origin: process.env.VUE_APP_URL_API_ORIGIN,\n  url: process.env.VUE_APP_URL_API_COLLABORATORS\n\n};\n\n\nexport default {\n  name: \"Home\",\n  search: \"Pesquisar\",\n  components: {\n    Header,\n  },\n  setup() {\n    const $q = useQuasar();\n    const submitting = ref(false);\n\n    return {\n      setup: setup,\n      submitting,\n      pageTitle: \"Cadastro de Colaboradores\",\n      pageSubTitle: \"Pessoa autorizada\",\n      showNotif(msg, color, icon) {\n        $q.notify({\n          message: msg,\n          color: color,\n          icon: icon,\n        });\n      },\n    };\n  },\n  data() {\n    return {\n\n      name: null,\n      email: null,\n      crmv: null,\n      avatar: null,\n      phone: null,\n      expertise: null,\n      role: null,\n      type: null,\n      status: 'active'\n\n    };\n  },\n  methods: {\n    async createCollaborator() {\n      this.submitting = true;\n\n      const data = {\n        name: this.name,\n        email: this.email,\n        crmv: this.crmv,\n        avatar: this.avatar,\n        phone: this.phone,\n        expertise: this.expertise,\n        role: this.role,\n        type: this.type,\n        status: 'active'\n      };\n\n      const dataJson = JSON.stringify(data);\n\n      if (data.name && data.email && data.phone) {\n        const req = await fetch(this.setup.url, {\n          method: \"POST\",\n          mode: 'cors',\n          headers: {\n            'Origin': this.setup.origin,\n            'Accept': 'application/json, text/javascript, */*; q=0.01',\n            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n          },  \n          body: dataJson,\n        });\n\n        const res = await req.json();\n        console.log(res.data.msg);\n\n\n        if (res) {\n          this.name = null\n          this.email = null\n          this.crmv = null\n          this.avatar = null\n          this.phone = null\n          this.expertise = null\n          this.role = null\n          this.type = null\n\n          this.showNotif(\n            res.data.msg,\n            \"green\",\n            \"las la-thumbs-up\"\n          );\n          this.$router.go(-1);\n        } else {\n          this.showNotif(\n            \"Ooops! Algo inesperado ocorreu. Tente mais tarde!\",\n            \"red\",\n            \"las la-bomb\"\n          );\n        }\n      } else {\n        this.showNotif(\n          \"Por favor. Os campos com * são obrigatórios.\",\n          \"red\",\n          \"las la-exclamation-triangle\"\n        );\n      }\n      this.submitting = false;\n    },\n  },\n\n  mounted() {},\n};\n</script>\n","import { render } from \"./Cadastro.vue?vue&type=template&id=45f8bdea\"\nimport script from \"./Cadastro.vue?vue&type=script&lang=js\"\nexport * from \"./Cadastro.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"E:\\\\laragon\\\\www\\\\clientes\\\\invet\\\\app\\\\app-v1\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__\nimport QLayout from 'quasar/src/components/layout/QLayout.js';\nimport QPageContainer from 'quasar/src/components/page/QPageContainer.js';\nimport QPage from 'quasar/src/components/page/QPage.js';\nimport QBanner from 'quasar/src/components/banner/QBanner.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QSeparator from 'quasar/src/components/separator/QSeparator.js';\nimport QBtnToggle from 'quasar/src/components/btn-toggle/QBtnToggle.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';\nimport QInnerLoading from 'quasar/src/components/inner-loading/QInnerLoading.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QLayout,QPageContainer,QPage,QBanner,QBtn,QCard,QCardSection,QInput,QSeparator,QBtnToggle,QCardActions,QInnerLoading});\n","import { h, computed } from 'vue'\n\nimport useAlign, { useAlignProps } from '../../composables/private/use-align.js'\n\nimport { createComponent } from '../../utils/private/create.js'\nimport { hSlot } from '../../utils/private/render.js'\n\nexport default createComponent({\n  name: 'QCardActions',\n\n  props: {\n    ...useAlignProps,\n    vertical: Boolean\n  },\n\n  setup (props, { slots }) {\n    const alignClass = useAlign(props)\n\n    const classes = computed(() =>\n      `q-card__actions ${ alignClass.value }`\n      + ` q-card__actions--${ props.vertical === true ? 'vert column' : 'horiz row' }`\n    )\n\n    return () => h('div', { class: classes.value }, hSlot(slots.default))\n  }\n})\n","import { h, computed } from 'vue'\n\nimport QBtn from '../btn/QBtn.js'\nimport QBtnGroup from '../btn-group/QBtnGroup.js'\n\nimport { createComponent } from '../../utils/private/create.js'\nimport { useFormInject, useFormProps } from '../../composables/private/use-form.js'\n\nimport { hMergeSlot } from '../../utils/private/render.js'\n\nexport default createComponent({\n  name: 'QBtnToggle',\n\n  props: {\n    ...useFormProps,\n\n    modelValue: {\n      required: true\n    },\n\n    options: {\n      type: Array,\n      required: true,\n      validator: v => v.every(\n        opt => ('label' in opt || 'icon' in opt || 'slot' in opt) && 'value' in opt\n      )\n    },\n\n    // To avoid seeing the active raise shadow through\n    // the transparent button, give it a color (even white)\n    color: String,\n    textColor: String,\n    toggleColor: {\n      type: String,\n      default: 'primary'\n    },\n    toggleTextColor: String,\n\n    outline: Boolean,\n    flat: Boolean,\n    unelevated: Boolean,\n    rounded: Boolean,\n    push: Boolean,\n    glossy: Boolean,\n\n    size: String,\n    padding: String,\n\n    noCaps: Boolean,\n    noWrap: Boolean,\n    dense: Boolean,\n    readonly: Boolean,\n    disable: Boolean,\n\n    stack: Boolean,\n    stretch: Boolean,\n\n    spread: Boolean,\n\n    clearable: Boolean,\n\n    ripple: {\n      type: [ Boolean, Object ],\n      default: true\n    }\n  },\n\n  emits: [ 'update:modelValue', 'clear', 'click' ],\n\n  setup (props, { slots, emit }) {\n    const hasActiveValue = computed(() =>\n      props.options.find(opt => opt.value === props.modelValue) !== void 0\n    )\n\n    const formAttrs = computed(() => ({\n      type: 'hidden',\n      name: props.name,\n      value: props.modelValue\n    }))\n\n    const injectFormInput = useFormInject(formAttrs)\n\n    const btnOptions = computed(() => props.options.map((item, i) => {\n      const { attrs, value, slot, ...opt } = item\n\n      return {\n        slot,\n        props: {\n          key: i,\n          onClick (e) { set(value, item, e) },\n\n          'aria-pressed': value === props.modelValue ? 'true' : 'false',\n\n          ...attrs,\n          ...opt,\n\n          outline: props.outline,\n          flat: props.flat,\n          rounded: props.rounded,\n          push: props.push,\n          unelevated: props.unelevated,\n          dense: props.dense,\n\n          disable: props.disable === true || opt.disable === true,\n\n          // Options that come from the button specific options first, then from general props\n          color: value === props.modelValue\n            ? mergeOpt(opt, 'toggleColor')\n            : mergeOpt(opt, 'color'),\n          textColor: value === props.modelValue\n            ? mergeOpt(opt, 'toggleTextColor')\n            : mergeOpt(opt, 'textColor'),\n          noCaps: mergeOpt(opt, 'noCaps') === true,\n          noWrap: mergeOpt(opt, 'noWrap') === true,\n\n          size: mergeOpt(opt, 'size'),\n          padding: mergeOpt(opt, 'padding'),\n          ripple: mergeOpt(opt, 'ripple'),\n          stack: mergeOpt(opt, 'stack') === true,\n          stretch: mergeOpt(opt, 'stretch') === true\n        }\n      }\n    }))\n\n    function set (value, opt, e) {\n      if (props.readonly !== true) {\n        if (props.modelValue === value) {\n          if (props.clearable === true) {\n            emit('update:modelValue', null, null)\n            emit('clear')\n          }\n        }\n        else {\n          emit('update:modelValue', value, opt)\n        }\n\n        emit('click', e)\n      }\n    }\n\n    function mergeOpt (opt, key) {\n      return opt[ key ] === void 0 ? props[ key ] : opt[ key ]\n    }\n\n    function getContent () {\n      const child = btnOptions.value.map(opt => {\n        return h(QBtn, opt.props, opt.slot !== void 0 ? slots[ opt.slot ] : void 0)\n      })\n\n      if (props.name !== void 0 && props.disable !== true && hasActiveValue.value === true) {\n        injectFormInput(child, 'push')\n      }\n\n      return hMergeSlot(slots.default, child)\n    }\n\n    return () => h(QBtnGroup, {\n      class: 'q-btn-toggle',\n      outline: props.outline,\n      flat: props.flat,\n      rounded: props.rounded,\n      push: props.push,\n      stretch: props.stretch,\n      unelevated: props.unelevated,\n      glossy: props.glossy,\n      spread: props.spread\n    }, getContent)\n  }\n})\n","import { h, computed, Transition, getCurrentInstance } from 'vue'\n\nimport QSpinner from '../spinner/QSpinner.js'\n\nimport { createComponent } from '../../utils/private/create.js'\nimport useDark, { useDarkProps } from '../../composables/private/use-dark.js'\nimport useTransition, { useTransitionProps } from '../../composables/private/use-transition.js'\n\nexport default createComponent({\n  name: 'QInnerLoading',\n\n  props: {\n    ...useDarkProps,\n    ...useTransitionProps,\n\n    showing: Boolean,\n    color: String,\n\n    size: {\n      type: [ String, Number ],\n      default: 42\n    },\n\n    label: String,\n    labelClass: String,\n    labelStyle: [ String, Array, Object ]\n  },\n\n  setup (props, { slots }) {\n    const vm = getCurrentInstance()\n    const isDark = useDark(props, vm.proxy.$q)\n\n    const { transition, transitionStyle } = useTransition(props, computed(() => props.showing))\n\n    const classes = computed(() =>\n      'q-inner-loading absolute-full column flex-center'\n      + (isDark.value === true ? ' q-inner-loading--dark' : '')\n    )\n\n    const labelClass = computed(() =>\n      'q-inner-loading__label'\n      + (props.labelClass !== void 0 ? ` ${ props.labelClass }` : '')\n    )\n\n    function getInner () {\n      const child = [\n        h(QSpinner, {\n          size: props.size,\n          color: props.color\n        })\n      ]\n\n      if (props.label !== void 0) {\n        child.push(\n          h('div', {\n            class: labelClass.value,\n            style: props.labelStyle\n          }, [ props.label ])\n        )\n      }\n\n      return child\n    }\n\n    function getContent () {\n      return props.showing === true\n        ? h(\n          'div',\n          { class: classes.value, style: transitionStyle.value },\n          slots.default !== void 0\n            ? slots.default()\n            : getInner()\n        )\n        : null\n    }\n\n    return () => h(Transition, {\n      name: transition.value,\n      appear: true\n    }, getContent)\n  }\n})\n","import { inject } from 'vue'\nimport { quasarKey } from '../utils/private/symbols.js'\n\n/**\n * Returns the $q instance.\n * Equivalent to `this.$q` inside templates.\n */\nexport default function useQuasar () {\n  return inject(quasarKey)\n}\n"],"sourceRoot":""}